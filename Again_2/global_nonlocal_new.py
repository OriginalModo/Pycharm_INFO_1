# global и nonlocal нужны только для изменения значений
# global может создать переменную, nonlocal не может!
# nonlocal ищет только во внешнмх скоупах, но не в глобальном
# не используйте global, nonlocal

# Особенности:
# 1) если мы пытаемся изменить какую-то переменную внутри функции, интерпретатор автоматически считает ее локальной,
# слова global/nonlocal нужны как информация интерпретатору, что переменная не локальна
# 2) оба ключевых слова НЕ нужны, если вам нужно только читать переменную, используйте их только для изменения
# 3) оба слова позволяют сразу перейти к поиску в нужном пространстве имен, nonlocal сразу переходит к поиску
# во внешних функциях (в который вложена текущая), global сразу переходит к поиску в глобальном пространстве имен.
# То есть nonlocal сразу идет в букву E, а global в букву G в аббревиатуре LEGB
# 4) global позволяет создать в глобальном пространстве имен переменную, которой там не было.
# Nonlocal работает только с уже существующими переменными
# 5) Nonlocal НЕ ищет в глобальном, а global во вложенных скоупах! Они не взаимозаменяемы
# 6) Есть редкие случаи, когда использование global оправдано,
# но в большинстве случаев и просто как хорошая практика  - не стоит использовать global и nonlocal.
# Стоит отдавать предпочтение независимым, "чистым" функциям.

counter = 100


def increment(value):
    return value + 1


if __name__ == '__main__':
    counter = increment(counter)
    print(counter)
